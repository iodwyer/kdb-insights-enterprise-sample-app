apiVersion: insights.kx.com/v1
kind: Assembly
metadata:
  name: kdb-sample-app
  labels:
    insights.kx.com/databaseID: ad2efcee-cb29-15d2-429e-6c811a8cce4b
spec:
  labels:
    kxname: kdb-sample-app
  tables:
    trade:
      name: trade
      type: partitioned
      primaryKeys: []
      prtnCol: time
      sortColsDisk: []
      sortColsMem: []
      sortColsOrd: []
      columns:
        - type: timestamp
          name: time
        - name: sym
          type: symbol
          attrMem: grouped
          attrOrd: parted
          attrDisk: parted
        - name: price
          type: long
        - name: size
          type: long
  mounts:
    rdb:
      type: stream
      baseURI: none
      partition: none
      dependency:
        - idb
      volume: {}
    idb:
      type: local
      baseURI: file:///data/db/idb
      partition: ordinal
      volume:
        size: 250G
    hdb:
      type: local
      baseURI: file:///data/db/hdb
      partition: date
      dependency:
        - idb
      volume:
        size: 2T
  elements:
    dap:
      instances:
        da:
          rtLogVolume: {}
          size: 1
          source: kdb-sample-app
          env: []
          k8sPolicy:
            resources:
              requests:
                cpu: 1500m
                memory: 7Gi
              limits:
                cpu: 3000m
                memory: 15Gi
          mountList:
            - rdb
            - idb
            - hdb
    sm:
      source: kdb-sample-app
      stream: ""
      eodPeachLevel: part
      size: 1
      env: []
      rtLogVolume:
        size: 20Gi
      tiers:
        - mount: rdb
          name: rdb
          retain: {}
        - compression:
            algorithm: qipc
            block: 14
          mount: idb
          name: idb
          schedule:
            freq: 0D00:10:00
          retain: {}
        - compression:
            algorithm: qipc
            block: 14
          mount: hdb
          name: hdb
          retain:
            time: 30 days
          schedule:
            freq: 1D00:00:00
      k8sPolicy:
        resources:
          requests:
            cpu: 1000m
            memory: 8Gi
          limits:
            cpu: 8000m
            memory: 17Gi
    sp:
      pipelines:
        trade-kafka-pipeline:
          base: py
          maxWorkers: 10
          minWorkers: 1
          monitoring: true
          persistence:
            controller:
              disabled: false
              class: ""
              size: 20Gi
              checkpointFreq: 5000
            worker:
              disabled: false
              class: ""
              size: 20Gi
              checkpointFreq: 5000
          protectedExecution: true
          imagePullSecrets: []
          secrets: []
          env:
            - name: KXI_ERROR_MODE
              value: "0"
            - name: KXI_PROTECTED_EXECUTION
              value: "false"
            - name: KXI_LOG_FORMAT
              value: json
            - name: KXI_LOG_LEVELS
              value: "DEFAULT: INFO"
          spec: |-
            from kxi import sp
            import pykx
            import numpy as np
            import pandas as pd 
            import datetime

            kfk_broker  = '104.198.219.51:9091'

            def dbg(data):
              print(data)
              return(data)

            trade_pipeline = (sp.read.from_kafka(topic='trade', brokers=kfk_broker)
                | sp.decode.json()
                | sp.map('{[data] (enlist[`timestamp]!enlist `time) xcol enlist "PS*j"$data }')
                | sp.map(dbg)
                | sp.write.to_stream(table = 'trade'))

            sp.run(trade_pipeline)
          workerThreads: 1
          controllerK8sPolicy:
            resources:
              requests:
                memory: 128Mi
                cpu: 250m
              limits:
                memory: 256Mi
                cpu: 500m
          workerK8sPolicy:
            resources:
              requests:
                memory: 256Mi
                cpu: 500m
              limits:
                memory: 512Mi
                cpu: 1000m
          labels: {}
          workerImage:
            repo: ""
            component: ""
            tag: ""
          controllerImage:
            repo: ""
            component: ""
            tag: ""
    sequencer:
      kdb-sample-app:
        external: false
        volume:
          size: 20G
        k8sPolicy:
          resources:
            limits:
              memory: 512Mi
              cpu: 1000m
            requests:
              memory: 256Mi
              cpu: 100m
  queryEnvironment:
    enabled: true
    size: 1
